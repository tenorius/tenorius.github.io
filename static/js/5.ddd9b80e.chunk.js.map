{"version":3,"sources":["modules/facts/api/chuck-norris-api.js","modules/facts/components/category-card.js","modules/facts/components/category-list.js","modules/facts/components/favorite-joke-card.js","modules/facts/containers/categories-page.js"],"names":["apiConfig","getCategories","a","async","fetch","method","res","json","getRandomCategoryJoke","category","Root","styled","div","CategoryCard","type","history","useHistory","onClick","push","Text","variant","color","weight","CategoryList","categories","map","key","Styled","FavContainer","Star","StarIcon","Card","FavoriteJokeCard","favoritedJoke","useFavouriteJoke","align","bottomSpacing","text","CategoriesPage","useAsync","deferFn","isPending","isResolved","isRejected","data","run","setData","useStoredCategories","setCategories","useEffect","length"],"mappings":"wNAAMA,EACC,mCAGMC,EAAgB,0BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACTE,MAAM,GAAD,OAAIJ,EAAJ,eAAgC,CACrDK,OAAQ,SAFiB,cACrBC,EADqB,yBAIpBA,EAAIC,QAJgB,sCAOhBC,EAAwB,6BAAAN,EAAAC,OAAA,uDAASM,EAAT,EAASA,SAAT,WAAAP,EAAA,MACjBE,MAAM,GAAD,OAAIJ,EAAJ,4BAAqCS,GAAY,CACtEJ,OAAQ,SAFyB,cAC7BC,EAD6B,yBAW5BA,EAAIC,QAXwB,uC,iXCNrC,IAAMG,EAAOC,IAAOC,IAAV,KAwBKC,MAZf,YAAiC,IAATC,EAAQ,EAARA,KAChBC,EAAUC,cAEhB,OACE,kBAACN,EAAD,CAAMO,QAAS,kBAAMF,EAAQG,KAAR,WAAiBJ,MACpC,kBAACK,EAAA,EAAD,CAAMC,QAAS,QAASC,MAAO,SAAUC,OAAQ,KAC9CR,K,mNCnBT,IAAMJ,EAAOC,IAAOC,IAAV,KAmBKW,MAVf,YAAuC,IAAfC,EAAc,EAAdA,WACtB,OACE,kBAAC,EAAD,KACGA,EAAWC,KAAI,SAAAhB,GAAQ,OACtB,kBAAC,EAAD,CAAciB,IAAKjB,EAAUK,KAAML,S,yuBCX3C,IAAMkB,EAAS,CACbC,aAAcjB,IAAOC,IAAT,KAIZiB,KAAMlB,YAAOmB,IAAPnB,CAAF,KAgBJoB,KAAMpB,IAAOC,IAAT,MAiCSoB,EAvBU,WACvB,IAAMC,EAAgBC,cAEtB,OACE,kBAACP,EAAOC,aAAR,KACE,kBAACD,EAAOI,KAAR,KACE,kBAACJ,EAAOE,KAAR,MACA,kBAACV,EAAA,EAAD,CACEC,QAAS,KACTC,MAAO,SACPc,MAAO,SACPC,cAAe,IAJjB,kBAQA,kBAACjB,EAAA,EAAD,CAAMC,QAAS,QAASC,MAAO,SAAUc,MAAO,UAC7CF,EAAgBA,EAAcI,KAAO,Y,6EC5ChD,IAAM3B,EAAOC,IAAOC,IAAV,KAoCK0B,UAlCf,WAA2B,IAAD,EAC0CC,YAAS,CACzEC,QAASvC,MADHwC,EADgB,EAChBA,UAAWC,EADK,EACLA,WAAYC,EADP,EACOA,WAAYC,EADnB,EACmBA,KAAMC,EADzB,EACyBA,IAAKC,EAD9B,EAC8BA,QAD9B,EAIcC,cAA9BvB,EAJgB,EAIhBA,WAAYwB,EAJI,EAIJA,cAgBpB,OAdAC,qBAAU,WACHzB,EAAW0B,OAGdJ,EAAQtB,GAFRqB,MAID,CAACrB,EAAYqB,EAAKC,IAErBG,qBAAU,WACJP,GAAcE,GAChBI,EAAcJ,KAEf,CAACF,EAAYE,EAAMI,IAGpB,kBAAC,EAAD,KACGP,GAAa,kBAAC,IAAD,CAAeJ,KAAM,YAClCO,GACC,oCACE,kBAAC,EAAD,CAAcpB,WAAYoB,IAC1B,kBAAC,EAAD,OAGHD,GAAc","file":"static/js/5.ddd9b80e.chunk.js","sourcesContent":["const apiConfig = {\n  url: 'https://api.chucknorris.io/jokes'\n};\n\nexport const getCategories = async () => {\n  const res = await fetch(`${apiConfig.url}/categories`, {\n    method: 'GET'\n  });\n  return res.json();\n};\n\nexport const getRandomCategoryJoke = async ({ category }) => {\n  const res = await fetch(`${apiConfig.url}/random?category=${category}`, {\n    method: 'GET'\n  });\n  // response\n  // {\n  //     \"icon_url\" : \"https://assets.chucknorris.host/img/avatar/chuck-norris.png\",\n  //     \"id\" : \"SeCMmrO6SyacTp58ni71lw\",\n  //     \"url\" : \"https://api.chucknorris.io/jokes/SeCMmrO6SyacTp58ni71lw\"\n  //     \"value\" : \"Chuck Norris does not brush his teeth with a toothbrush and toothpaste. instead, he uses steel wool and hydrochloric acid.\"\n  // }\n  return res.json();\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport Text from '../../core/components/Text';\nimport { useHistory } from 'react-router-dom';\n\nconst Root = styled.div`\n  width: 23%;\n  height: 60px;\n  border-radius: 4px;\n  background-color: white;\n  padding: 16px;\n  margin-bottom: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nfunction CategoryCard({ type }) {\n  const history = useHistory();\n\n  return (\n    <Root onClick={() => history.push(`/${type}`)}>\n      <Text variant={'body2'} color={'orange'} weight={700}>\n        {type}\n      </Text>\n    </Root>\n  );\n}\n\nexport default CategoryCard;\n","import React from 'react';\nimport styled from 'styled-components';\nimport CategoryCard from './category-card';\n\nconst Root = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  background-color: bisque;\n  padding: 16px;\n  margin: 0 -16px;\n`;\n\nfunction CategoryList({ categories }) {\n  return (\n    <Root>\n      {categories.map(category => (\n        <CategoryCard key={category} type={category} />\n      ))}\n    </Root>\n  );\n}\n\nexport default CategoryList;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Text from '../../core/components/Text';\nimport StarIcon from '@material-ui/icons/Star';\nimport { useFavouriteJoke } from '../contexts/favourite-joke-context';\n\nconst Styled = {\n  FavContainer: styled.div`\n    position: relative;\n    margin: 42px -16px;\n  `,\n  Star: styled(StarIcon)`\n    cursor: pointer;\n    position: absolute;\n\n    && {\n      font-size: 109px;\n      color: gold;\n      margin: 0 auto;\n      display: block;\n      top: 50%;\n      left: 50%;\n      opacity: 0.3;\n      transform: translate(-50%, -50%);\n      pointer-events: none;\n    }\n  `,\n  Card: styled.div`\n    background-color: white;\n    width: 200px;\n    min-height: 100px;\n    display: block;\n    margin: 0 auto;\n    position: relative;\n    padding: 16px;\n  `\n};\nconst FavoriteJokeCard = () => {\n  const favoritedJoke = useFavouriteJoke();\n\n  return (\n    <Styled.FavContainer>\n      <Styled.Card>\n        <Styled.Star />\n        <Text\n          variant={'h4'}\n          color={'orange'}\n          align={'center'}\n          bottomSpacing={16}\n        >\n          Favotire Joke:\n        </Text>\n        <Text variant={'body2'} color={'orange'} align={'center'}>\n          {favoritedJoke ? favoritedJoke.text : 'empty'}\n        </Text>\n      </Styled.Card>\n    </Styled.FavContainer>\n  );\n};\n\nexport default FavoriteJokeCard;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useAsync } from 'react-async';\nimport { getCategories } from '../api/chuck-norris-api';\nimport CategoryList from '../components/category-list';\nimport { useStoredCategories } from '../contexts/stored-categories-context';\nimport FavoriteJokeCard from '../components/favorite-joke-card';\nimport LoadingInline from '../../core/components/loading-inline';\n\nconst Root = styled.div``;\n\nfunction CategoriesPage() {\n  const { isPending, isResolved, isRejected, data, run, setData } = useAsync({\n    deferFn: getCategories\n  });\n  const { categories, setCategories } = useStoredCategories();\n\n  useEffect(() => {\n    if (!categories.length) {\n      run();\n    } else {\n      setData(categories);\n    }\n  }, [categories, run, setData]);\n\n  useEffect(() => {\n    if (isResolved && data) {\n      setCategories(data);\n    }\n  }, [isResolved, data, setCategories]);\n\n  return (\n    <Root>\n      {isPending && <LoadingInline text={'Loading'} />}\n      {data && (\n        <>\n          <CategoryList categories={data} />\n          <FavoriteJokeCard />\n        </>\n      )}\n      {isRejected && <div> error... </div>}\n    </Root>\n  );\n}\n\nexport default CategoriesPage;\n"],"sourceRoot":""}